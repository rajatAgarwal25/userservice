solr.server.url=http://guest:12345@localhost:8983/solr/collection1/
solr.server.url.b2b=http://guest:12345@localhost:8983/solr/collection_b2b/

#DB properties:
db.driver=com.mysql.jdbc.Driver
db.url=jdbc:mysql://localhost:3306/proptiger?zeroDateTimeBehavior=convertToNull
wordpress.db.url=jdbc:mysql://localhost:3306/wordpress_new?zeroDateTimeBehavior=convertToNull
wordpress_news.db.url=jdbc:mysql://localhost:3306/wordpress_news?zeroDateTimeBehavior=convertToNull
quartz.db.URL=jdbc:mysql://localhost:3306/scheduler?zeroDateTimeBehavior=convertToNull
db.username=root
db.password=root
#Hibernate Configuration:
hibernate.dialect=com.proptiger.core.init.CustomMySQL5InnoDBDialec
hibernate.show_sql=false

entitymanager.packages.to.scan=com.proptiger.core.model\,com.proptiger.data.model\,com.proptiger.userservice.model\,com.proptiger.core.model.proptiger

b2b.price-inventory.max.month.dblabel = end_date
proptiger.url = https://www.proptiger.com/
proptiger.reset.password.page=reset-password

#Mail configuration
mail.interested.to.sell.reciepient=

mail.from.noreply=
#this email id will be used to send mail for new registration

mail.from.support=
mail.from.customer=customer.service@proptiger.com
mail.otp.bcc=


#Redis Configuration
redis.hostName=localhost
redis.port=6379
redis.usePool=true
# seconds
redis.defaultExpirationTime=1

#already enquired will be true if user enquired within last n days
enquired.within.days=1

#cdn image url
cdn.image.url =https://cdn.proptiger.com/

avatar.image.url = images/loc/avatar.png

#Cookies will expire after 30(60*60*24*30) days
cookie.expiry.period = 2592000

#session inactive interval in seconds, inactive session will be valid for 7(60*60*24*7) days
session.max.inactive.interval = 604800
api.access.scheduled.cron=0 0/30 * * * *
assesslog.internal.ds.size.threshold=1000
#social key/secret configurations
app.fb.appid=501819279963476
app.fb.secret=4988dc244423d899af6944cb1ceba0bb

app.google.appid=992050038561-1vacghaes2plgo15ee79sf6sst1e8ga7.apps.googleusercontent.com
app.google.secret=zsUEPXYNgffK9ms-1dFWgN9b
#to get information from google auth
google.scope = profile email 
facebook.scope=email
#no of request allowed for a client who does not meet api secret hash requirements and server time
illegal.api.access.threshold.count=500000000
#while enabling request validation make sure to decrease illegal access count
security.enable.request.validation = false
security.enable.request.validation.warning = true
security.enable.crawl.prevention = false
security.white.listed.ip=127.0.0.1\,10.0.0.52\,54.254.140.69
#internal IP that are not whitelisted but trusted to get client IP from request header
security.trusted.ip=10.0.0.26\,10.0.0.153\,54.169.39.80\,54.169.49.50\,10.0.0.84
security.enable.otp=true

# Environment Configs (develop,beta,prod)
env.name = develop
env.error.emails = prod

#allowable request count for a user in a time frame
REQUEST_PER_MIN.post.count=5
REQUEST_PER_MIN.all.count=200
REQUEST_PER_DAY.post.count=100
REQUEST_PER_DAY.all.count=5000

mbean.api.access.persistence.name = com.proptiger.core.service:name=APIAccessDetailPersistentServiceUserService
mbean.property.reader.name = com.proptiger.core.util:name=propertyReaderMBeanUserService
#secured api regex that are supposed to be accesed from white listed IP. To specify method user API##!##METHOD
security.secured.api=.*data/v1/entity/user\\?userId.*\,.*data/v1/entity/user-details\\?userId.*\,.*data/v1/entity/user-details\\?email.*\,.*data/v1/entity/user##!##POST\,.*app/v1/user/details-by-email\\?email.*
scheduler.enable=false
external.url.v1.dashboard=data/v1/entity/user/1/dashboard
external.url.v4.locality=data/v4/entity/locality
external.url.v1.trend=app/v1/trend
external.url.v1.b2b.attribute=data/v1/entity/b2b/attribute?attributeName=